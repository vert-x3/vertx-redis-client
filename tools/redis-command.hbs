/*
* Copyright 2018 Red Hat, Inc.
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* and Apache License v2.0 which accompanies this distribution.
*
* The Eclipse Public License is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* The Apache License v2.0 is available at
* http://www.opensource.org/licenses/apache2.0.php
*
* You may elect to redistribute this code under either of these licenses.
*/
package io.vertx.redis;

import io.vertx.codegen.annotations.VertxGen;
import io.vertx.core.buffer.Buffer;
import io.vertx.redis.impl.client.RedisCommandImpl;

/**
* <b>Auto generated</b> API Commands to interact with REDIS.
*
* @author <a href="mailto:plopes@redhat.com">Paulo Lopes</a>
*/
@VertxGen
public enum RedisCommandEnum {
{{#each .}}
  {{ upcase (snakecase @key) }}("{{ upcase @key }}"),
{{/each}}
  // extra commands (sentinel)
  SENTINEL_CKQUORUM("SENTINEL CKQUORUM"),
  SENTINEL_FAILOVER("SENTINEL FAILOVER"),
  SENTINEL_FLUSHCONFIG("SENTINEL FLUSHCONFIG"),
  SENTINEL_GET_MASTER_ADDR_BY_NAME("SENTINEL GET-MASTER-ADDR-BY-NAME"),
  SENTINEL_INFO("SENTINEL INFO"),
  SENTINEL_MASTER("SENTINEL MASTER"),
  SENTINEL_MASTERS("SENTINEL MASTERS"),
  SENTINEL_RESET("SENTINEL RESET"),
  SENTINEL_SLAVES("SENTINEL SLAVES"),
  SENTINEL_SENTINELS("SENTINEL SENTINELS"),

  ASKING("ASKING");

  private final int tokenCount;
  private final Buffer buffer;

  RedisCommandEnum(String command) {
    final String[] parts = command.split(" ");
    this.tokenCount = parts.length;
    this.buffer = Buffer.buffer();
    for (int i = 0; i < tokenCount; i++) {
      // serialize the command
      buffer.appendByte((byte) '$');
      buffer.appendBytes(RedisCommandImpl.numToBytes(parts[i].length()));
      buffer.appendByte((byte) '\r');
      buffer.appendByte((byte) '\n');
      buffer.appendString(parts[i]);
      buffer.appendByte((byte) '\r');
      buffer.appendByte((byte) '\n');
    }
  }

  public Buffer toBuffer() {
    return buffer;
  }

  public int getTokenCount() {
    return tokenCount;
  }
}
