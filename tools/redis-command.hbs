/*
* Copyright 2018 Red Hat, Inc.
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* and Apache License v2.0 which accompanies this distribution.
*
* The Eclipse Public License is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* The Apache License v2.0 is available at
* http://www.opensource.org/licenses/apache2.0.php
*
* You may elect to redistribute this code under either of these licenses.
*/
package io.vertx.redis;

import java.nio.charset.StandardCharsets;

import io.vertx.codegen.annotations.VertxGen;

/**
* <b>Auto generated</b> API Commands to interact with REDIS.
*
* @author <a href="mailto:plopes@redhat.com">Paulo Lopes</a>
*/
@VertxGen
public enum RedisCommandEnum {
{{#each .}}
  {{ upcase (snakecase @key) }}("{{ upcase @key }}", {{ length arguments }}),
{{/each}}
  // extra commands (sentinel)
  SENTINEL_CKQUORUM("SENTINEL CKQUORUM", 0),
  SENTINEL_FAILOVER("SENTINEL FAILOVER", 0),
  SENTINEL_FLUSHCONFIG("SENTINEL FLUSHCONFIG", 0),
  SENTINEL_GET_MASTER_ADDR_BY_NAME("SENTINEL GET-MASTER-ADDR-BY-NAME", 1),
  SENTINEL_INFO("SENTINEL INFO", 0),
  SENTINEL_MASTER("SENTINEL MASTER", 0),
  SENTINEL_MASTERS("SENTINEL MASTERS", 0),
  SENTINEL_RESET("SENTINEL RESET", 0),
  SENTINEL_SLAVES("SENTINEL SLAVES", 0),
  SENTINEL_SENTINELS("SENTINEL SENTINELS", 0),

  ASKING("ASKING", 0);

  private final byte[][] tokens;
  private final int lengthHint;

  RedisCommandEnum(String command, int argumentsHint) {
    final String[] parts = command.split(" ");
    tokens = new byte[parts.length][];
    for (int i = 0; i < parts.length; i++) {
      tokens[i] = parts[i].getBytes(StandardCharsets.UTF_8);
    }
    // precompute the hint
    lengthHint = parts.length + argumentsHint;
  }

  public byte[][] tokens() {
    return tokens;
  }

  public int lengthHint() {
    return lengthHint;
  }
}
