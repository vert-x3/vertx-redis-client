/*
 * Copyright 2018 Red Hat, Inc.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Apache License v2.0 which accompanies this distribution.
 *
 * The Eclipse Public License is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * The Apache License v2.0 is available at
 * http://www.opensource.org/licenses/apache2.0.php
 *
 * You may elect to redistribute this code under either of these licenses.
 */
package io.vertx.redis;

import io.vertx.codegen.annotations.Fluent;
import io.vertx.codegen.annotations.VertxGen;

import io.vertx.core.AsyncResult;
import io.vertx.core.Handler;

import io.vertx.redis.RedisConnection;

import io.vertx.redis.impl.RedisAPIImpl;

/**
 * <b>Auto generated</b> fluent API to interact with REDIS.
 *
 * @author <a href="mailto:plopes@redhat.com">Paulo Lopes</a>
 */
@VertxGen
public interface RedisAPI {

  /**
   * Wraps an instance of the Client.
   *
   * @param client existing redis client
   * @return a instance of the connector.
   */
  static RedisAPI wrap(RedisConnection client) {
    return new RedisAPIImpl(client);
  }

  /**
   * Unwraps the underlying client.
   *
   * @return the underlying client.
   */
  RedisConnection unwrap();

{{#each .}}
  /**
   * {{summary}}
   * {{#if complexity}}
    * <b>Time complexity</b>: <i>{{complexity}}</i>
   * {{/if}}
   {{#if arguments}}
   * <ul>{{/if}}{{#each arguments}}
   *   <li>{{#if command}}<b>{{command}}</b> {{/if}}{{name}} {{#if optional}}<i>(optional)</i> {{/if}}- {{type}}</li>{{/each}}
   * {{#if arguments}}</ul>{{/if}}
   * @since Redis {{since}}
   * group: {{group}}
   */
  @Fluent
  default RedisAPI {{camelcase (lowercase @key)}}({{#if arguments}}Args arguments, {{/if}}Handler<AsyncResult<Reply>> handler) {
    unwrap().send("{{@key}}", {{#if arguments}}arguments, {{/if}}handler);
    return this;
  }

{{/each}}
}
